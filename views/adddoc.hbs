<script>
    async function getSubjectlist() {
        console.log("get subject list");
        const universitySelect = document.getElementById('university-select');
        const courseSelect = document.getElementById('course-select');
        const semesterSelect = document.getElementById('semester-select');
        const subjectSelect = document.getElementById('subject-select');
        let selectedUniversity = universitySelect.value;
        let selectedCourse = courseSelect.value;
        let selectedSemester = semesterSelect.value;
        const response = await fetch(`/subjectlist?university=${selectedUniversity}&semester=${selectedSemester}&course=${selectedCourse}`);
        const subjects = await response.json();
        subjectSelect.innerHTML = '';
        const nullOption = document.createElement('option');
        nullOption.value = 'null';
        nullOption.textContent = 'Select Subject';
        subjectSelect.appendChild(nullOption);
        subjects.forEach((subject) => {
            const option = document.createElement('option');
            option.value = subject.fsubjectname;
            option.textContent = subject.subjectname;
            subjectSelect.appendChild(option);
        });
    }

    async function getModulelist() {
        console.log("get module list");
        const universitySelect = document.getElementById('university-select');
        const courseSelect = document.getElementById('course-select');
        const semesterSelect = document.getElementById('semester-select');
        const subjectSelect = document.getElementById('subject-select');
        const moduleSelect = document.getElementById('module-select');
        let selectedUniversity = universitySelect.value;
        let selectedCourse = courseSelect.value;
        let selectedSemester = semesterSelect.value;
        let selectedSubject = subjectSelect.value;
        const response = await fetch(`/modulelist?university=${selectedUniversity}&semester=${selectedSemester}&course=${selectedCourse}&subject=${selectedSubject}`);
        const modules = await response.json();
        moduleSelect.innerHTML = '';
        const nullOption = document.createElement('option');
        nullOption.value = 'null';
        nullOption.textContent = 'Select Module';
        moduleSelect.appendChild(nullOption);
        const allOption = document.createElement('option');
        allOption.value = 'all-module';
        allOption.textContent = 'All Module';
        moduleSelect.appendChild(allOption);
        modules.forEach((module) => {
            const option = document.createElement('option');
            option.value = module.fmodulename;
            option.textContent = module.modulename;
            moduleSelect.appendChild(option);
        });
    }

    function enableButton() {
        var button = document.getElementById("submit-button");
        button.disabled = false;
        button.style.backgroundColor = "blue";
    }
</script>

<div id="doc-form" class="md:px-48 pt-8">
    <form action="/doc" method="post" class="flex flex-col items-center">
        {{!-- <center class="text-xl font-semibold mb-3">Add Document</center> --}}

        <div class="mb-4 flex">
            <label for="university-select" class="block mr-3 font-bold">University</label>
            <select name="universityname" id="university-select" onchange="getSubjectlist()"
                class="border border-gray-400 px-4 py-2 rounded w-64">
                {{!-- <option value="null">Select University</option> --}}

                {{#each university}}
                <option value="{{this.funiname}}">{{this.uniname}}</option>
                {{/each}}
            </select>
        </div>
        <div class="mb-4 flex">
            <label for="course-select" class="block mr-3 font-bold">Course:</label>
            <select name="coursename" id="course-select" onchange="getSubjectlist()"
                class="border border-gray-400 px-4 py-2 rounded w-64">
                <option value="null">Select Course</option>

                {{#each course}}
                <option value="{{this.fcoursename}}">{{this.coursename}}</option>
                {{/each}}
            </select>
        </div>

        <div class="mb-4 flex">
            <label for="semester-select" class="block mr-3 font-bold">Semester:</label>
            <select name="semestername" id="semester-select" onchange="getSubjectlist()"
                class="border border-gray-400 px-4 py-2 rounded w-64">
                <option value="null">Select Semester</option>
                {{#each semester}}
                <option value="{{this.fsemestername}}">{{this.semestername}}</option>
                {{/each}}
            </select>
        </div>

        <div class="mb-4 flex">
            <label for="subject-select" class="block mr-3 font-bold">Subject:</label>
            <div class="flex flex-col">

                <select name="subjectname" id="subject-select" class="border border-gray-400 px-4 py-2 rounded w-64">
                    <option value="null">Select Subject</option>
                    {{!-- {{#each subject}}
                    <option value="{{this.fsubjectname}}">{{this.subjectname}}</option>
                    {{/each}} --}}
                </select>
                <input type="text" name="newsubject" id="doc-name"
                    class="m-2 border border-gray-400 px-4 py-2 rounded w-64" placeholder="New Subject">
            </div>
        </div>

        <div class="mb-4 flex">
            <label for="module-select" class="block mr-3 font-bold">Module:</label>
            <select name="modulename" id="module-select" class="border border-gray-400 px-4 py-2 rounded w-64">
                <option value="null">Select Module</option>
                {{#each module}}
                <option value="{{this.fmodulename}}">{{this.modulename}}</option>
                {{/each}}
            </select>
        </div>

        <div class="mb-4 flex col-span-1">
            <label for="category-select" class="block mr-3 font-bold">Category:</label>
            <select name="categoryname" id="category-select" class="border border-gray-400 px-4 py-2 rounded w-64">
                <option value="null">Select Category</option>
                {{#each category}}
                <option value="{{this.fcategoryname}}">{{this.categoryname}}</option>
                {{/each}}
            </select>
        </div>


        <div class="mb-4 flex ">
            <div class="">
                <div class="mb-4 flex">
                    <label for="document-title" class="block mr-3 font-bold">Title:</label>
                    <input type="text" name="docname" id="doc-name"
                        class="border border-gray-400 px-4 py-2 rounded w-64">
                </div>

                <div class="flex">
                    <label for="file" class="block mr-3 font-bold text-gray-900 dark:text-gray-300">
                        Upload</label>
                    {{!-- <img src="" id="imgview" alt=""> --}}
                    <input type="file" name="file" id="file" accept="*/*"
                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block mr-3 font-bold w-full dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                        placeholder="800">
                    <input type="text" name="doclink" id="doc-link" hidden>
                </div>

                <div id="preloader" class="p-3">
                    Document Uploading
                    <svg aria-hidden="true"
                        class="mr-2 w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600"
                        viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                            fill="currentColor"></path>
                        <path
                            d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                            fill="currentFill"></path>
                    </svg>
                    <span class="sr-only">Loading...</span>
                </div>

            </div>
        </div>
        <div class="flex">

            <div class="px-5">
                <button type="button" onclick="uploadDoc()" class="bg-orange-500 text-white px-4 py-2 rounded">Upload
                    Doc</button>
            </div>

            <div class="">
                <button type="submit" id="submit-button" class="bg-gray-500 text-white px-4 py-2 rounded"
                    disabled>Submit</button>
            </div>
        </div>

        <div class="m-5 w-16 h-16">

        </div>

    </form>

    <table class="min-w-full divide-y divide-gray-200 mt-12 hidden">
        <thead class="bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    No
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Doc</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Category </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    University</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Course</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Semester</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Subject</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Module</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Actions</th>
            </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
            {{#each doc}}
            <tr>
                <td class="px-6 py-4 whitespace-nowrap">{{@index}}</td>
                <td class="px-6 py-4 whitespace-nowrap"><a href="{{this.doclink}}" target="_blank"
                        class="text-blue-500 underline">{{this.docname}}</a></td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.categoryname}}</td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.universityname}}</td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.coursename}}</td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.semestername}}</td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.subjectname}}</td>
                <td class="px-6 py-4 whitespace-nowrap">{{this.modulename}}</td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <a href="/doc/delete/{{this._id}}" class="text-red-500 hover:text-red-700">Delete</a>
                </td>
            </tr>
            {{/each}}
            <!-- Add more table rows as needed -->
        </tbody>
    </table>
</div>


<style>
    #preloader {
        display: none;
    }
</style>
<script>

    let image;

    async function uploadDoc() {
        console.log('called');
        document.getElementById('preloader').style.display = "block";
        console.log('done');
        let image = await updateImageDisplay();
        document.getElementById('preloader').style.display = "none";
        console.log('done');
        var inputElement = document.getElementById('doc-link');
        inputElement.value = image;
        alert('added');
        enableButton()
    }

    const input = document.getElementById('file');


    async function updateImageDisplay() {

        const curFiles = input.files;
        for (const file of curFiles) {

            const data = new FormData()
            data.append("file", file)
            data.append("upload_preset", "e-commerce")
            data.append("cloud_name", "gbrozdev")
            await fetch("https://api.cloudinary.com/v1_1/gbrozdev/upload", {
                method: "post",
                body: data
            })
                .then(res => res.json())
                .then(data => {
                    let url = `https://res.cloudinary.com/gbrozdev/${data.resource_type}/upload/v${data.version}/${data.public_id}.${data.format}`
                    console.log(url)
                    image = url;
                })
        }
        return image;
    }
</script>